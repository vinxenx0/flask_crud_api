import pytest
from app import create_app, db
from app.models.user import User
from werkzeug.security import generate_password_hash

@pytest.fixture
def app():
    """Configura la aplicaciÃ³n Flask en modo de pruebas"""
    app = create_app()
    app.config.update({
        "TESTING": True,
        "SQLALCHEMY_DATABASE_URI": "sqlite:///:memory:",
        "SQLALCHEMY_TRACK_MODIFICATIONS": False
    })

    with app.app_context():
        db.create_all()
        create_test_user()  # ðŸ‘ˆ Asegurar que `testuser` se crea antes de cada prueba

    yield app

    with app.app_context():
        db.session.remove()
        db.drop_all()

@pytest.fixture
def client(app):
    """Devuelve el cliente de pruebas"""
    return app.test_client()


def create_test_user():
    """Crea un usuario de prueba si no existe"""
    user = User.query.filter_by(username="testuser").first()
    if not user:
        user = User(username="testuser", password=generate_password_hash("password123"), role="user")
        db.session.add(user)
        db.session.commit()
        print("DEBUG: Usuario `testuser` creado en la base de datos de pruebas.")
